# Dockerfile.actions
FROM debian:bullseye-slim

ENV DEBIAN_FRONTEND=noninteractive


# Install Python 3 (and pip) plus build tools
RUN apt-get update && apt-get install -y --no-install-recommends \
    parallel \  
      curl git make build-essential ca-certificates tar unzip \
      python3 python3-pip python3-venv python3-distutils python3-dev pkg-config libdatrie-dev \
    && rm -rf /var/lib/apt/lists/*

# 2. Install GitHub CLI (gh)
RUN curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg \
      | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
    && chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] \
         https://cli.github.com/packages stable main" \
         > /etc/apt/sources.list.d/github-cli.list \
    && apt-get update \
    && apt-get install -y gh \
    && rm -rf /var/lib/apt/lists/*

ENV GOCACHE=/tmp/.cache/go-build
ENV GOLANG_VERSION 1.24.3
# 1. Install system prerequisites
RUN apt-get update -qq \
    && DEBIAN_FRONTEND=noninteractive apt-get install -y \
      git make gcc ca-certificates wget jq \
    && rm -rf /var/lib/apt/lists/*


# Install required packages (curl, wget, tar, etc.)
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    ca-certificates \
    gnupg \
    tar \
    unzip \
    && rm -rf /var/lib/apt/lists/*

# 2. Install Go
ENV GOLANG_VERSION 1.24.3
RUN curl -fsSL https://go.dev/dl/go${GOLANG_VERSION}.linux-amd64.tar.gz -o go.tar.gz \
    && tar -C /usr/local -xzf go.tar.gz \
    && rm go.tar.gz
ENV PATH /usr/local/go/bin:/root/go/bin:$PATH
ENV GOPATH /root/go

# 3. Install massdns
RUN git clone https://github.com/blechschmidt/massdns.git /opt/massdns \
    && cd /opt/massdns \
    && make -j"$(nproc)" \
    && make install \
    && cd / 

# 4. Install puredns & anew
RUN go install github.com/d3mondev/puredns/v2@latest \
    && go install -v github.com/projectdiscovery/httpx/cmd/httpx@latest \
    && go install -v github.com/projectdiscovery/dnsx/cmd/dnsx@latest \
    && CGO_ENABLED=1 go install github.com/projectdiscovery/katana/cmd/katana@latest \
    && go install github.com/sensepost/gowitness@latest \
    && go install github.com/sw33tLie/uff/v2@latest \
    && go install github.com/OJ/gobuster/v3@latest \
    && go install github.com/tomnomnom/waybackurls@latest \
    && go install github.com/j3ssie/durl@latest \
    && go install github.com/j3ssie/go-auxs/urp@latest \
    && go install github.com/j3ssie/sdlookup@latest \
    && go install github.com/j3ssie/go-auxs/chrunk@latest \
    && go install github.com/tomnomnom/anew@latest \
    && go install github.com/tomnomnom/waybackurls@latest \
    && go install github.com/tomnomnom/unfurl@latest \
    && go install github.com/tomnomnom/assetfinder@latest \
    && go install github.com/tomnomnom/hacks/inscope@latest \
    && go install github.com/tomnomnom/gf@latest \
    && go install -v github.com/projectdiscovery/subfinder/v2/cmd/subfinder@latest \
    && go install -v github.com/projectdiscovery/dnsx/cmd/dnsx@latest \
    && go install -v github.com/projectdiscovery/nuclei/v3/cmd/nuclei@latest \
    && go install github.com/lc/gau/v2/cmd/gau@latest \ 
    && go clean -cache -modcache \
    && rm -rf /root/.cache/go-build

# 5. Install dnsgen
RUN python3 -m pip install dnsgen

#6. Install amass
RUN go install github.com/OWASP/Amass/v3/...@v3.23.3

# 6. Install regulator
RUN mkdir -p /logs \
    && git clone https://github.com/cramppet/regulator.git /opt/regulator \
    && cd /opt/regulator \
    && pip3 install -r requirements.txt \
    && cd / 
  

# Keep container alive for GitHub Actions
ENTRYPOINT ["sleep", "infinity"]
